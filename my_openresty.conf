#   120306 try openresty for lua script
server {
    listen       9090;
    server_name  localhost;

    charset utf-8;

    access_log  logs/access.my_openresty.log main;
    error_log   logs/error.my_openresty.log info;

    default_type 'text/plain';    

    location / {
        # MIME type determined by default_type:
        default_type 'text/plain';
        #content_by_lua "ngx.say('Hello,world!')";
        content_by_lua_file conf/lua/readme.lua;
        #rewrite ^ /readme redirect;
        #content_by_lua_file conf/lua/readme.lua;
        #root   html;
        #index  index.html index.htm;
    }
    location /readme {
        # MIME type determined by default_type:
        default_type 'text/plain';
        #content_by_lua "ngx.say('Hello,world!')";
        content_by_lua_file conf/lua/readme.lua;
        #root   html;
        #index  index.html index.htm;
    }


    location ~ ^/=/(\w+) {
        # MIME type determined by default_type:
        default_type 'text/plain';
        
        lua_need_request_body on;
        rds_json on;
        lua_code_cache off;

        client_max_body_size 50k;
        client_body_buffer_size 50k;

        #content_by_lua 'ngx.print(ngx.var.request_body)';
        content_by_lua_file conf/lua/$1.lua;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
    #error_page  404              /404.html;
    location = /robots.txt {
        return 204;
    }
    location = /favicon.ico {
        return 204;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
